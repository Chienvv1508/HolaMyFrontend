@page "{id:int}"
@model HolaMyFrontend.Pages.Buildings.BuildingDetailModel
@{
    ViewData["Title"] = Model.Building.BuildingName ?? "Chi tiết tòa nhà";
}

<!-- Toast Notification Container -->
<div id="toastContainer" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;"></div>

<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">@(Model.Building.BuildingName ?? "Tòa nhà")</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="/Buildings">Tòa nhà</a></li>
        <li class="breadcrumb-item active text-white">Chi tiết</li>
    </ol>
</div>
<!-- Single Page Header End -->
<!-- Rental Detail Start -->
<div class="container-fluid">
    <div class="container py-5">
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <p style="display:none;" id="apiErrorMessage">@Model.ErrorMessage</p>
        }
        <div class="row g-4 mb-5">
            <div class="col-lg-8 col-xl-9">
                <div class="row g-4">
                    <!-- Hình ảnh chính của tòa nhà -->
                    <div class="col-lg-6">
                        <div class="border rounded overflow-hidden">
                            <img id="main-image" src="@(Model.Building.BuildingImages.FirstOrDefault(i => i.IsThumbnail == true)?.ImageUrl ?? Model.Building.BuildingImages.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.jpg")" class="img-fluid rounded main-image" alt="@(Model.Building.BuildingName ?? "Hình ảnh tòa nhà")" style="transition: all 0.3s ease-in-out; cursor: pointer;">
                            <!-- Danh sách ảnh nhỏ từ buildingImages và room images -->
                            <div class="d-flex flex-wrap mt-2">
                                @foreach (var image in Model.Building.BuildingImages)
                                {
                                    <img src="@(image.ImageUrl ?? "/img/placeholder.jpg")" class="img-fluid rounded me-2 thumbnail building-image" style="width: 70px; height: 70px; cursor: pointer; transition: transform 0.2s;" alt="@(image.Description ?? "Hình ảnh tòa nhà")">
                                }
                                @foreach (var room in Model.Building.Rooms)
                                {
                                    @foreach (var image in room.ImageUrl)
                                    {
                                        <img src="@(image.ImageUrl ?? "/img/placeholder.jpg")" class="img-fluid rounded me-2 thumbnail room-image" data-room-id="@room.RoomId" style="width: 70px; height: 70px; cursor: pointer; transition: transform 0.2s;" alt="@(image.Description ?? "Hình ảnh phòng")">
                                    }
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Thông tin tòa nhà -->
                    <div class="col-lg-6">
                        <h5 class="building-name fw-bold fs-3 mb-3">@(Model.Building.BuildingName ?? "Không xác định")</h5>
                        @{
                            var minPrice = Model.Building.MinPrice;
                            var maxPrice = Model.Building.MaxPrice;
                        }

                        @if (minPrice.HasValue && maxPrice.HasValue)
                        {
                            if (minPrice == maxPrice)
                            {
                                <p class="text-success fw-bold fs-3 mb-2">@minPrice.Value.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) / tháng</p>
                            }
                            else
                            {
                                <p class="text-success fw-bold fs-3 mb-2">
                                    @minPrice.Value.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                                    -
                                    @maxPrice.Value.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                                    / tháng
                                </p>
                            }
                        }
                        else
                        {
                            <p class="text-success fw-bold fs-3 mb-2">Liên hệ để biết giá</p>
                        }

                        <ul class="list-unstyled mb-3">
                            <li class="mb-2"><i class="fa fa-clock me-2 text-primary"></i> Cập nhật: @Model.Building.UpdatedHoursBefore giờ trước</li>
                            <li class="mb-2">
                                <i class="fa fa-star me-2 text-primary"></i> Đánh giá:
                                <span class="d-inline-flex">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= 4) // Giả định rating 4.0
                                        {
                                            <i class="fa fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="fa fa-star text-secondary"></i>
                                        }
                                    }
                                    <span class="ms-2 text-muted">(4.0 - 10 reviews)</span>
                                </span>
                            </li>
                            <li class="mb-2"><i class="fa fa-info-circle me-2 text-primary"></i> Trạng thái: @(Model.Building.Status == 1 ? "Hoạt động" : "Không hoạt động")</li>
                            <li class="mb-2"><i class="fa fa-map-marker-alt me-2 text-primary"></i> Địa chỉ: @(Model.Building.AddressDetail ?? "Không có thông tin"), @(Model.Building.Ward?.WardName ?? "Không xác định")</li>
                            <li class="mb-2"><i class="fa fa-user me-2 text-primary"></i> Chủ trọ: @(Model.Building.Provider?.Name ?? "Không xác định")</li>
                            <li class="mb-2"><i class="fa fa-phone me-2 text-primary"></i> Điện thoại: @(Model.Building.Provider?.PhoneNumber ?? "Không có thông tin")</li>
                        </ul>

                        <!-- Checkbox Room Types -->
                        <div class="mb-3">
                            <label class="form-label">Loại phòng</label>
                            <div class="d-flex flex-wrap gap-2">
                                @if (Model.Building.Rooms.Any())
                                {
                                    @foreach (var room in Model.Building.Rooms)
                                    {
                                        <input type="checkbox" class="btn-check room-checkbox" id="room-@room.RoomId" value="@room.RoomId" autocomplete="off" data-thumbnail="@(room.ImageUrl.FirstOrDefault(i => i.IsThumbnail == true)?.ImageUrl ?? room.ImageUrl.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.jpg")">
                                        <label class="btn btn-outline-primary rounded-pill px-3 py-1" for="room-@room.RoomId">@(room.RoomType?.RoomTypeName ?? "N/A")</label>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">Không có loại phòng</p>
                                }
                            </div>
                        </div>
                        <!-- Save to List -->
                        <form method="post" asp-page="/Buildings/SavedBuildingList" id="saveForm">
                            <input type="hidden" name="buildingId" value="@Model.Building.BuildingId">
                            <button type="submit" class="btn border border-secondary rounded-pill px-4 py-2 text-primary btn-hover">
                                <i class="fas fa-cart-plus me-2 text-primary"></i> Lưu vào danh sách
                            </button>
                        </form>
                    </div>

                    <!-- Mô tả và danh sách phòng -->
                    <div class="col-lg-12">
                        <nav>
                            <div class="nav nav-tabs mb-3">
                                <button class="nav-link active border-white border-bottom-0" type="button" role="tab" id="nav-about-tab" data-bs-toggle="tab" data-bs-target="#nav-about" aria-controls="nav-about" aria-selected="true">Description</button>
                                <button class="nav-link border-white border-bottom-0" type="button" role="tab" id="nav-reviews-tab" data-bs-toggle="tab" data-bs-target="#nav-reviews" aria-controls="nav-reviews" aria-selected="false">Reviews</button>
                            </div>
                        </nav>
                        <div class="tab-content mb-5">
                            <div class="tab-pane active" id="nav-about" role="tabpanel" aria-labelledby="nav-about-tab">
                                <h5>Mô tả chung</h5>
                                <p>@(Model.Building.Description ?? "Không có mô tả.")</p>
                                <h5>So sánh các loại phòng</h5>
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Loại phòng</th>
                                            <th>Diện tích</th>
                                            <th>Giá/tháng</th>
                                            <th>Mô tả</th>
                                            <th>Tình trạng</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var room in Model.Building.Rooms)
                                        {
                                            <tr>
                                                <td>@(room.RoomType?.RoomTypeName ?? "N/A")</td>
                                                <td>@(room.AreaM2?.ToString("F0") ?? "N/A") m²</td>
                                                <td>@(room.Price?.ToString("C0", new System.Globalization.CultureInfo("vi-VN")) ?? "Liên hệ")</td>
                                                <td>@(room.Description ?? "Không có mô tả")</td>
                                                <td>@(room.IsAvailable == true ? "Còn trống" : "Đã thuê")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                                <h5>Tiện ích</h5>
                                <div class="row g-4">
                                    @foreach (var amenity in Model.AmenityListDTO)
                                    {
                                        bool isAvailable = Model.Building.Rooms.Any(r => r.Amenities.Any(a => a.AmenityId == amenity.AmenityId));
                                        <div class="col-6">
                                            <div class="d-flex align-items-center @(isAvailable ? "text-success" : "text-muted")">
                                                <i class="fas fa-check-circle me-2"></i>
                                                <span>@amenity.Name</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="tab-pane" id="nav-reviews" role="tabpanel" aria-labelledby="nav-reviews-tab">
                                <div class="d-flex">
                                    <img src="img/avatar.jpg" class="img-fluid rounded-circle p-3" style="width: 100px; height: 100px;" alt="">
                                    <div class="">
                                        <p class="mb-2" style="font-size: 14px;">March 5, 2025</p>
                                        <div class="d-flex justify-content-between">
                                            <h5>Jason Smith</h5>
                                            <div class="d-flex mb-3">
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star"></i>
                                            </div>
                                        </div>
                                        <p class="text-dark">Great room, very comfortable and clean!</p>
                                    </div>
                                </div>
                                <div class="d-flex">
                                    <img src="img/avatar.jpg" class="img-fluid rounded-circle p-3" style="width: 100px; height: 100px;" alt="">
                                    <div class="">
                                        <p class="mb-2" style="font-size: 14px;">March 10, 2025</p>
                                        <div class="d-flex justify-content-between">
                                            <h5>Sam Peters</h5>
                                            <div class="d-flex mb-3">
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star"></i>
                                                <i class="fa fa-star"></i>
                                            </div>
                                        </div>
                                        <p class="text-dark">Good location but a bit small for my needs.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <form action="/submit-review" method="POST" id="reviewForm">
                        <h4 class="mb-4 fw-bold">Leave a Review</h4>
                        <div class="mb-3">
                            <textarea class="form-control border rounded" name="comment" placeholder="Your Review *" rows="5" required></textarea>
                        </div>
                        <div class="d-flex align-items-center mb-4">
                            <p class="mb-0 me-3">Rate this:</p>
                            <div class="d-flex align-items-center rating-stars">
                                <input type="hidden" name="rating" id="rating-value" value="0">
                                <i class="fa fa-star text-muted" data-value="1" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="2" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="3" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="4" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="5" style="cursor: pointer;"></i>
                            </div>
                        </div>
                        <input type="hidden" name="buildingId" value="@Model.Building.BuildingId">
                        <input type="hidden" name="tenantId" value="2">
                        <button type="submit" class="btn btn-primary rounded">Submit</button>
                    </form>
                </div>
            </div>
            <div class="col-lg-4 col-xl-3">
                <div class="row g-4 fruite">
                    <!-- Landlord Information Section -->
                    <div class="col-lg-12 mb-4">
                        <div class="border rounded p-3">
                            <div class="d-flex align-items-center mb-3">
                                <img src="@(Model.Building.Provider?.Avatar ?? "/img/avatar.jpg")" class="img-fluid rounded-circle me-3" style="width: 60px; height: 60px;" alt="Provider Avatar">
                                <div>
                                    <h5 class="mb-1">@(Model.Building.Provider?.Name ?? "Không xác định")</h5>
                                    <p class="mb-0 text-muted">Tham gia: @(Model.Building.Provider?.JoinDate.ToString("dd/MM/yyyy") ?? "N/A")</p>
                                    <p class="mb-0 text-muted">Bài đăng: @(Model.Building.Provider?.PostCount.ToString() ?? "0")</p>
                                </div>
                            </div>
                            <div class="d-flex flex-column gap-2">
                                <form action="/start-chat" method="POST" id="chatFormMobile" class="w-100">
                                    <input type="hidden" name="buildingId" value="@Model.Building.BuildingId">
                                    <input type="hidden" name="tenantId" value="2">
                                    <input type="hidden" name="providerId" value="@Model.Building.Provider?.Id">
                                    <button type="submit" class="btn border border-secondary rounded-pill w-100 text-primary">
                                        <i class="fas fa-comment me-2 text-primary"></i> Chat Now
                                    </button>
                                </form>
                                <button type="button" class="btn border border-secondary rounded-pill w-100 text-primary" onclick="alert('Số điện thoại: @(Model.Building.Provider?.PhoneNumber ?? "Không có thông tin")')">
                                    <i class="fas fa-phone me-2 text-primary"></i> @(Model.Building.Provider?.PhoneNumber ?? "Không có thông tin")
                                </button>
                                <div class="d-flex gap-2">
                                    <button type="button" class="btn border border-secondary rounded-pill w-50 text-danger" id="reportButton">
                                        <i class="fas fa-exclamation-triangle me-2 text-danger"></i> Báo xấu
                                    </button>
                                    <button type="button" class="btn border border-secondary rounded-pill w-50 text-primary" onclick="navigator.share({title: '@(Model.Building.BuildingName ?? "Tòa nhà")', url: window.location.href})">
                                        <i class="fas fa-share-alt me-2 text-primary"></i> Chia sẻ
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <form action="/search" method="GET">
                            <div class="input-group w-100 mx-auto d-flex mb-4">
                                <input type="search" name="query" class="form-control p-3" placeholder="Search rentals..." aria-describedby="search-icon-1" required>
                                <button type="submit" class="input-group-text p-3 border-0" id="search-icon-1"><i class="fa fa-search"></i></button>
                            </div>
                        </form>
                    </div>
                    <div class="col-lg-12">
                        <h4 class="mb-3">Mới nhất</h4>
                        @foreach (var building in Model.FeaturedBuildings)
                        {
                            <div class="d-flex align-items-center justify-content-start mb-4">
                                <div class="rounded me-4" style="width: 100px; height: 100px;">
                                    <img src="@building.ThumbnailUrl" class="img-fluid rounded" alt="@building.BuildingName">
                                </div>
                                <div>
                                    <h6 class="mb-2">@building.BuildingName</h6>
                                    <div class="d-flex mb-2">
                                        <i class="fa fa-star text-secondary"></i>
                                        <i class="fa fa-star text-secondary"></i>
                                        <i class="fa fa-star text-secondary"></i>
                                        <i class="fa fa-star text-secondary"></i>
                                        <i class="fa fa-star"></i>
                                    </div>
                                    <div class="d-flex mb-2">
                                        <h5 class="fw-bold me-2">@(building.DisplayPrice?.ToString("N0") ?? "Liên hệ") VNĐ/tháng</h5>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="d-flex justify-content-center my-4">
                            <a href="/Buildings/BuildingList" class="btn border border-secondary px-4 py-3 rounded-pill text-primary w-100">Xem thêm</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Related Rentals Section -->
        <h1 class="fw-bold mb-0">Nhà trọ liên quan</h1>
        <div class="vesitable">
            <div class="owl-carousel vegetable-carousel justify-content-center">
                @if (Model.RelatedBuildings.Any())
                {
                    @foreach (var building in Model.RelatedBuildings)
                    {
                        <div class="border border-primary rounded position-relative vesitable-item">
                            <div class="vesitable-img">
                                <img src="@(building.ThumbnailUrl ?? "/img/placeholder.jpg")" class="img-fluid w-100 rounded-top" alt="@building.BuildingName">
                            </div>
                            <div class="text-white bg-primary px-3 py-1 rounded position-absolute" style="top: 10px; right: 10px;">@building.WardName</div>
                            <div class="p-4 pb-0 rounded-bottom">
                                <h4 class="building-name">@building.BuildingName</h4>
                                <div class="d-flex mb-2">
                                    @if (building.Rating.HasValue)
                                    {
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(building.Rating.Value))
                                            {
                                                <i class="fa fa-star text-warning"></i>
                                            }
                                            else if (i <= Math.Ceiling(building.Rating.Value) && building.Rating.Value % 1 > 0)
                                            {
                                                <i class="fa fa-star-half-alt text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="fa fa-star text-secondary"></i>
                                            }
                                        }
                                        <span class="ms-2 text-muted">(@building.Rating.Value.ToString("0.0"))</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Chưa có đánh giá</span>
                                    }
                                </div>
                                <p class="text-muted mb-2">Địa chỉ: @(string.IsNullOrEmpty(building.Address) ? building.WardName : building.Address)</p>
                                <div class="d-flex justify-content-between flex-lg-wrap">
                                    <p class="text-dark fs-5 fw-bold">@(building.DisplayPrice?.ToString("N0") ?? "Liên hệ") VNĐ/tháng</p>
                                    <form action="/Buildings/BuildingDetail" method="GET">
                                        <input type="hidden" name="id" value="@building.BuildingId">
                                        <button type="submit" class="btn border border-secondary rounded-pill px-3 py-1 mb-4 text-primary">
                                            <i class="fas fa-eye me-2 text-primary"></i> Xem chi tiết
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12 text-center">
                        <p>Không có nhà trọ liên quan.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- Rental Detail End -->
<!-- Modal báo xấu -->
<div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reportModalLabel">Báo xấu chủ trọ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reportForm" method="post" asp-page-handler="ReportLandlord" enctype="multipart/form-data">
                    <input type="hidden" name="reportedOwnerId" value="@Model.Building.Provider?.Id">
                    <input type="hidden" name="buildingId" value="@Model.Building.BuildingId">

                    <div class="mb-3">
                        <label for="reason" class="form-label">Lý do báo xấu <span class="text-danger">*</span></label>
                        <select class="form-select" id="reason" name="reason" required>
                            <option value="" disabled selected>Chọn lý do</option>
                            <option value="Thông tin sai lệch">Thông tin sai lệch</option>
                            <option value="Hành vi không phù hợp">Hành vi không phù hợp</option>
                            <option value="Lừa đảo">Lừa đảo</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">Mô tả chi tiết</label>
                        <textarea class="form-control" id="description" name="description" rows="4" placeholder="Mô tả vấn đề bạn gặp phải..."></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Ảnh bằng chứng (tùy chọn, tối đa 10 ảnh, 5MB mỗi ảnh)</label>
                        <div id="evidenceFilesContainer">
                            <div class="input-group mb-2">
                                <input type="file" class="form-control" name="evidenceFiles" accept="image/jpeg,image/png,image/gif" multiple>
                                <div class="evidence-preview"></div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="isAnonymous" name="isAnonymous">
                        <label class="form-check-label" for="isAnonymous">Ẩn danh</label>
                    </div>

                    <button type="submit" class="btn btn-primary">Gửi báo cáo</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .modal-content {
        border-radius: 10px;
    }

    .input-group .form-control:invalid {
        border-color: #dc3545;
    }

    .evidence-preview img {
        max-width: 100px;
        max-height: 100px;
        margin: 5px;
        border-radius: 5px;
    }

    .evidence-preview .error {
        color: #dc3545;
        font-size: 0.9em;
    }

    .building-name {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        line-height: 1.5em;
        min-height: 1.5em;
        max-height: 1.5em;
        margin-bottom: 0.5rem;
        font-size: 1.25rem; /* fs-5 */
    }

    .room-type-btn {
        transition: all 0.3s ease;
    }

        .room-type-btn.active {
            background-color: #007bff;
            color: white !important;
            border-color: #007bff !important;
        }

            .room-type-btn.active input {
                color: white !important;
            }

    .custom-toast {
        display: none;
        position: fixed;
        bottom: 20px;
        right: 20px;
        z-index: 1050;
        background: linear-gradient(90deg, #e0f7f9 50%, #a5d6a7 50%);
        color: #1a3c34;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 15px 20px;
        max-width: 300px;
        font-family: Arial, sans-serif;
        opacity: 1;
        transition: opacity 0.5s ease-out;
    }

        .custom-toast.error {
            background: linear-gradient(90deg, #ffebee 50%, #ef5350 50%);
        }

        .custom-toast .toast-icon {
            width: 24px;
            height: 24px;
            background: #4caf50;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-right: 10px;
        }

        .custom-toast.error .toast-icon {
            background: #ef5350;
        }

        .custom-toast .toast-icon::before {
            content: "✔";
            color: white;
            font-size: 16px;
        }

        .custom-toast.error .toast-icon::before {
            content: "✖";
        }

        .custom-toast .toast-close {
            float: right;
            font-size: 18px;
            cursor: pointer;
            color: #1a3c34;
            background: none;
            border: none;
            padding: 0;
        }

        .custom-toast .toast-title {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .custom-toast .toast-message {
            font-size: 14px;
            margin: 0;
        }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const mainImage = document.querySelector('#main-image');
        const thumbnails = document.querySelectorAll('.thumbnail');
        const roomCheckboxes = document.querySelectorAll('.room-checkbox');
        const toastContainer = document.getElementById('toastContainer');
        const apiErrorMessage = document.getElementById('apiErrorMessage');
        const reportButton = document.getElementById('reportButton');
        const reportModal = new bootstrap.Modal(document.getElementById('reportModal'));
        const defaultBuildingImage = '@(Model.Building.BuildingImages.FirstOrDefault(i => i.IsThumbnail == true)?.ImageUrl ?? Model.Building.BuildingImages.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.jpg")';
        // Xử lý click vào nút Báo xấu
        if (reportButton) {
            reportButton.addEventListener('click', function (e) {
                e.preventDefault();
                const authToken = localStorage.getItem('jwtToken');
                if (!authToken) {
                    showToast('error', 'Lỗi', 'Vui lòng đăng nhập để báo xấu.');
                    setTimeout(() => {
                        window.location.href = '/HomePage/Login'; // Điều chỉnh URL đăng nhập phù hợp
                    }, 2000); // Chuyển hướng sau 2 giây
                } else {
                    reportModal.show(); // Mở modal nếu đã đăng nhập
                }
            });
        }

        // Xử lý click vào ảnh chính để mở ImageUrl trong tab mới
        mainImage.addEventListener('click', function (e) {
            e.preventDefault();
            const imageUrl = this.src;
            if (imageUrl && imageUrl !== '/img/placeholder.jpg' && imageUrl.startsWith('http')) {
                window.open(imageUrl, '_blank');
            } else {
                showToast('error', 'Lỗi', 'Không tìm thấy ảnh hợp lệ.');
            }
        });

        // Xử lý click vào thumbnail để cập nhật ảnh chính
        thumbnails.forEach(thumbnail => {
            thumbnail.addEventListener('click', function (e) {
                e.preventDefault();
                // Cập nhật ảnh chính
                mainImage.src = this.src;
                mainImage.alt = this.alt;

                // Nếu click vào ảnh của tòa nhà, bỏ chọn tất cả checkbox loại phòng
                if (this.classList.contains('building-image')) {
                    roomCheckboxes.forEach(cb => {
                        cb.checked = false;
                        const label = document.querySelector(`label[for="room-${cb.value}"]`);
                        if (label) {
                            label.classList.remove('active');
                        }
                    });
                }
                // Nếu click vào ảnh của phòng, chọn checkbox tương ứng
                else if (this.classList.contains('room-image')) {
                    const roomId = this.dataset.roomId;
                    roomCheckboxes.forEach(cb => {
                        const isCurrent = cb.value === roomId;
                        cb.checked = isCurrent;
                        const label = document.querySelector(`label[for="room-${cb.value}"]`);
                        if (label) {
                            if (isCurrent) {
                                label.classList.add('active');
                            } else {
                                label.classList.remove('active');
                            }
                        }
                    });
                }
            });
        });

        // Xử lý checkbox loại phòng
        roomCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                // Bỏ chọn tất cả các checkbox khác và cập nhật trạng thái active
                roomCheckboxes.forEach(cb => {
                    const label = document.querySelector(`label[for="room-${cb.value}"]`);
                    if (cb !== this) {
                        cb.checked = false;
                        if (label) {
                            label.classList.remove('active');
                        }
                    } else {
                        if (label) {
                            if (this.checked) {
                                label.classList.add('active');
                            } else {
                                label.classList.remove('active');
                            }
                        }
                    }
                });

                // Cập nhật ảnh chính khi chọn checkbox
                if (this.checked) {
                    mainImage.src = this.dataset.thumbnail;
                    mainImage.alt = `Hình ảnh phòng ${this.value}`;
                } else {
                    mainImage.src = defaultBuildingImage;
                    mainImage.alt = '@(Model.Building.BuildingName ?? "Hình ảnh tòa nhà")';
                }
            });
        });

        // Xử lý đánh giá sao
        const stars = document.querySelectorAll('.rating-stars i');
        const ratingInput = document.getElementById('rating-value');

        stars.forEach(star => {
            star.addEventListener('click', function () {
                const rating = this.getAttribute('data-value');
                ratingInput.value = rating;

                stars.forEach(s => {
                    if (s.getAttribute('data-value') <= rating) {
                        s.classList.remove('text-muted');
                        s.classList.add('text-secondary');
                    } else {
                        s.classList.remove('text-secondary');
                        s.classList.add('text-muted');
                    }
                });
            });
        });

        // Xử lý file input cho nhiều ảnh
        const evidenceFilesContainer = document.getElementById('evidenceFilesContainer');
        const fileInput = evidenceFilesContainer.querySelector('input[name="evidenceFiles"]');

        function attachFileHandler(input) {
            input.addEventListener('change', function () {
                const previewContainer = this.parentElement.querySelector('.evidence-preview');
                previewContainer.innerHTML = '';

                const files = Array.from(this.files);
                if (files.length > 10) {
                    this.classList.add('is-invalid');
                    previewContainer.innerHTML = '<span class="error">Chỉ được chọn tối đa 10 ảnh.</span>';
                    showToast('error', 'Lỗi', 'Chỉ được chọn tối đa 10 ảnh.');
                    return;
                }

                for (const file of files) {
                    if (!['image/jpeg', 'image/png', 'image/gif'].includes(file.type)) {
                        this.classList.add('is-invalid');
                        previewContainer.innerHTML += '<span class="error">Chỉ hỗ trợ JPEG, PNG, GIF.</span>';
                        showToast('error', 'Lỗi', 'Chỉ hỗ trợ định dạng JPEG, PNG, GIF.');
                        return;
                    }
                    if (file.size > 5 * 1024 * 1024) {
                        this.classList.add('is-invalid');
                        previewContainer.innerHTML += '<span class="error">Ảnh không được vượt quá 5MB.</span>';
                        showToast('error', 'Lỗi', 'Ảnh không được vượt quá 5MB.');
                        return;
                    }

                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        previewContainer.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
                this.classList.remove('is-invalid');
            });
        }

        if (fileInput) {
            attachFileHandler(fileInput);
        }

        const reportForm = document.getElementById('reportForm');
        if (reportForm) {
            reportForm.addEventListener('submit', function (e) {
                const files = fileInput.files;
                if (files.length > 10) {
                    e.preventDefault();
                    showToast('error', 'Lỗi', 'Chỉ được gửi tối đa 10 ảnh.');
                    return;
                }
                for (const file of files) {
                    if (!['image/jpeg', 'image/png', 'image/gif'].includes(file.type)) {
                        e.preventDefault();
                        showToast('error', 'Lỗi', 'Chỉ hỗ trợ định dạng JPEG, PNG, GIF.');
                        return;
                    }
                    if (file.size > 5 * 1024 * 1024) {
                        e.preventDefault();
                        showToast('error', 'Lỗi', 'Ảnh không được vượt quá 5MB.');
                        return;
                    }
                }
                if (!reportForm.querySelector('#reason').value) {
                    e.preventDefault();
                    showToast('error', 'Lỗi', 'Vui lòng chọn lý do báo xấu.');
                }
            });
        }
        
        function showToast(type, title, message) {
            const toast = document.createElement('div');
            toast.className = `custom-toast ${type === 'error' ? 'error' : ''}`;
            toast.innerHTML = `
                        <span class="toast-icon"></span>
                        <div>
                            <span class="toast-title">${title}</span>
                            <p class="toast-message">${message}</p>
                        </div>
                        <button type="button" class="toast-close" onclick="this.parentElement.style.display='none'">×</button>
                    `;
            toastContainer.appendChild(toast);
            toast.style.display = 'block';

            setTimeout(() => {
                toast.style.opacity = '0';
                setTimeout(() => {
                    toast.style.display = 'none';
                    toastContainer.removeChild(toast);
                }, 500);
            }, 4500);
        }
    });
</script>