@page "{id:int}"
@model HolaMyFrontend.Pages.Buildings.BuildingDetailModel
@{
    ViewData["Title"] = Model.Building.BuildingName ?? "Chi tiết tòa nhà";
}

<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">@(Model.Building.BuildingName ?? "Tòa nhà")</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="/">Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="/Buildings">Tòa nhà</a></li>
        <li class="breadcrumb-item active text-white">Chi tiết</li>
    </ol>
</div>
<!-- Single Page Header End -->
<!-- Rental Detail Start -->
<div class="container-fluid">
    <div class="container py-5">
        <div class="row g-4 mb-5">
            <div class="col-lg-8 col-xl-9">
                <div class="row g-4">
                    <!-- Hình ảnh chính của tòa nhà -->
                    <div class="col-lg-6">
                        <div class="border rounded overflow-hidden position-relative">
                            <img id="main-image" src="@(Model.Building.BuildingImages.FirstOrDefault(i => i.IsThumbnail == true)?.ImageUrl ?? Model.Building.BuildingImages.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.jpg")" class="img-fluid rounded main-image" alt="@(Model.Building.BuildingName ?? "Hình ảnh tòa nhà")" style="transition: all 0.3s ease-in-out; cursor: pointer; width: 100%; height: 400px; object-fit: contain;">
                            <!-- Danh sách ảnh nhỏ từ buildingImages và room images -->
                            <div class="thumbnail-container position-relative mt-2">
                                <button class="thumbnail-nav prev-btn" style="display: none; position: absolute; left: -30px; top: 50%; transform: translateY(-50%); background: rgba(0,0,0,0.5); color: white; border: none; padding: 10px; cursor: pointer; z-index: 10;"><</button>
                                <div class="thumbnail-wrapper d-flex flex-nowrap overflow-hidden" style="max-width: 100%;">
                                    @foreach (var image in Model.Building.BuildingImages)
                                    {
                                        <div class="thumbnail-item position-relative">
                                            <img src="@(image.ImageUrl ?? "/img/placeholder.jpg")" class="img-fluid rounded me-2 thumbnail building-image" style="width: 70px; height: 70px; cursor: pointer; transition: transform 0.2s; object-fit: contain;" alt="@(image.Description ?? "Hình ảnh tòa nhà")">
                                        </div>
                                    }
                                    @foreach (var room in Model.Building.Rooms)
                                    {
                                        @foreach (var image in room.ImageUrl)
                                        {
                                            <div class="thumbnail-item position-relative">
                                                <img src="@(image.ImageUrl ?? "/img/placeholder.jpg")" class="img-fluid rounded me-2 thumbnail room-image" data-room-id="@room.RoomId" data-room-type="@(room.RoomType?.RoomTypeName ?? "N/A")" data-room-price="@(room.Price?.ToString("C0", new System.Globalization.CultureInfo("vi-VN")) ?? "Liên hệ")" style="width: 70px; height: 70px; cursor: pointer; transition: transform 0.2s; object-fit: contain;" alt="@(image.Description ?? "Hình ảnh phòng")">
                                                <span class="room-type-overlay position-absolute bottom-0 start-0 w-100 text-center text-white bg-dark bg-opacity-75" style="font-size: 0.7rem; padding: 2px;">@(room.RoomType?.RoomTypeName ?? "N/A")</span>
                                            </div>
                                        }
                                    }
                                </div>
                                <button class="thumbnail-nav next-btn" style="display: none; position: absolute; right: -30px; top: 50%; transform: translateY(-50%); background: rgba(0,0,0,0.5); color: white; border: none; padding: 10px; cursor: pointer; z-index: 10;">></button>
                            </div>
                        </div>
                    </div>

                    <!-- Thông tin tòa nhà -->
                    <div class="col-lg-6">
                        <div class="d-flex align-items-center mb-3">
                            <h5 class="building-name fw-bold fs-3 mb-0">@(Model.Building.BuildingName ?? "Không xác định")</h5>
                            @if (Model.Building.VipBoxLevel.HasValue)
                            {
                                <span class="badge text-white ms-2 vip-label" style="background-color: @(Model.Building.VipBoxColor);">
                                    @Model.Building.VipBoxName
                                    <i class="fa @(Model.Building.VipBoxLevel.Value >= 2 ? "fa-crown" : "fa-star") ms-1"></i>
                                </span>
                            }
                        </div>
                        @{
                            var minPrice = Model.Building.MinPrice;
                            var maxPrice = Model.Building.MaxPrice;
                        }
                        @if (minPrice.HasValue && maxPrice.HasValue)
                        {
                            if (minPrice == maxPrice)
                            {
                                <p class="text-success fw-bold fs-3 mb-2 building-price">@minPrice.Value.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")) </p>
                            }
                            else
                            {
                                <p class="text-success fw-bold fs-3 mb-2 building-price">
                                    @minPrice.Value.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                                    -
                                    @maxPrice.Value.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                                    / tháng
                                </p>
                            }
                        }
                        else
                        {
                            <p class="text-success fw-bold fs-3 mb-2 building-price">Liên hệ để biết giá</p>
                        }
                        <!-- Display selected room type and price -->
                        <div id="room-info" class="mb-3">
                            <p id="selected-room-type" class="text-muted mb-1" hidden></p>
                            <p id="selected-room-price" class="text-success fw-bold fs-3 mb-2 building-price"></p>
                        </div>
                        <ul class="list-unstyled mb-3">
                            <li class="mb-2">
                                <i class="fa fa-clock me-2 text-primary"></i> Cập nhật:
                                @{
                                    if (@Model.Building.UpdatedHoursBefore <= 24)
                                    {
                                        @($"{@Model.Building.UpdatedHoursBefore} giờ trước")
                                    }
                                    else if (@Model.Building.UpdatedHoursBefore <= 24 * 30)
                                    {
                                        @($"{@Model.Building.UpdatedHoursBefore / 24} ngày trước")
                                    }
                                    else
                                    {
                                        @($"{@Model.Building.UpdatedHoursBefore / (24 * 30)} tháng trước")
                                    }
                                }
                            </li>
                            <li class="mb-2">
                                <i class="fa fa-star me-2 text-primary"></i> Đánh giá:
                                <span class="d-inline-flex">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= 4) // Giả định rating 4.0
                                        {
                                            <i class="fa fa-star text-warning"></i>
                                        }
                                        else
                                        {
                                            <i class="fa fa-star text-secondary"></i>
                                        }
                                    }
                                    <span class="ms-2 text-muted">(4.0 - 10 reviews)</span>
                                </span>
                            </li>
                            <li class="mb-2"><i class="fa fa-info-circle me-2 text-primary"></i> Trạng thái: @(Model.Building.Status == HolaMy.Core.DTOs.BuildingDTOs.BuildingStatus.Approved ? "Hoạt động" : "Không hoạt động")</li>
                            <li class="mb-2"><i class="fa fa-map-marker-alt me-2 text-primary"></i> Địa chỉ: @(Model.Building.AddressDetail ?? "Không có thông tin"), @(Model.Building.Ward?.WardName ?? "Không xác định")</li>
                            <li class="mb-2"><i class="fa fa-user me-2 text-primary"></i> Chủ trọ: @(Model.Building.Provider?.Name ?? "Không xác định")</li>
                            <li class="mb-2"><i class="fa fa-phone me-2 text-primary"></i> Điện thoại: @(Model.Building.Provider?.PhoneNumber ?? "Không có thông tin")</li>
                        </ul>

                        <!-- Checkbox Room Types -->
                        <div class="mb-3">
                            <label class="form-label">Loại phòng</label>
                            <div class="d-flex flex-wrap gap-2">
                                @if (Model.Building.Rooms.Any())
                                {
                                    @foreach (var room in Model.Building.Rooms)
                                    {
                                        <input type="checkbox" class="btn-check room-checkbox" id="room-@room.RoomId" value="@room.RoomId" autocomplete="off" data-thumbnail="@(room.ImageUrl.FirstOrDefault(i => i.IsThumbnail == true)?.ImageUrl ?? room.ImageUrl.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.jpg")">
                                        <label class="btn btn-outline-primary rounded-pill px-3 py-1" for="room-@room.RoomId">@(room.RoomType?.RoomTypeName ?? "N/A")</label>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">Không có loại phòng</p>
                                }
                            </div>
                        </div>
                        <!-- Save to List -->
                        <form method="post" asp-page="/Buildings/SavedBuildingList" id="saveForm">
                            <input type="hidden" name="buildingId" value="@Model.Building.BuildingId">
                            <input type="hidden" name="roomId" id="roomIdInput">
                            <button type="submit" class="btn border border-secondary rounded-pill px-4 py-2 text-primary btn-hover" onclick="return validateSaveForm()">
                                <i class="fas fa-cart-plus me-2 text-primary"></i> Lưu vào danh sách
                            </button>
                        </form>
                    </div>

                    <!-- Mô tả và danh sách phòng -->
                    <div class="col-lg-12">
                        <nav>
                            <div class="nav nav-tabs mb-3">
                                <button class="nav-link active border-white border-bottom-0" type="button" role="tab" id="nav-about-tab" data-bs-toggle="tab" data-bs-target="#nav-about" aria-controls="nav-about" aria-selected="true">Mô tả</button>
                                <button class="nav-link border-white border-bottom-0" type="button" role="tab" id="nav-reviews-tab" data-bs-toggle="tab" data-bs-target="#nav-reviews" aria-controls="nav-reviews" aria-selected="false">Đánh giá</button>
                            </div>
                        </nav>
                        <div class="tab-content mb-5">
                            <div class="tab-pane active" id="nav-about" role="tabpanel" aria-labelledby="nav-about-tab">
                                <h5>Mô tả chung</h5>
                                <p>@(Model.Building.Description ?? "Không có mô tả.")</p>
                                <h5>So sánh các loại phòng</h5>
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Loại phòng</th>
                                            <th>Diện tích</th>
                                            <th>Giá/tháng</th>
                                            <th>Mô tả</th>
                                            <th>Tình trạng</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var room in Model.Building.Rooms)
                                        {
                                            <tr>
                                                <td>@(room.RoomType?.RoomTypeName ?? "N/A")</td>
                                                <td>@(room.AreaM2?.ToString("F0") ?? "N/A") m²</td>
                                                <td>@(room.Price?.ToString("C0", new System.Globalization.CultureInfo("vi-VN")) ?? "Liên hệ")</td>
                                                <td>@(room.Description ?? "Không có mô tả")</td>
                                                <td>@(room.IsAvailable == true ? "Còn trống" : "Đã thuê")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                                <h5>Tiện ích</h5>
                                <div class="row g-4">
                                    @foreach (var amenity in Model.AmenityListDTO)
                                    {
                                        bool isAvailable = Model.Building.Rooms.Any(r => r.Amenities.Any(a => a.AmenityId == amenity.AmenityId));
                                        <div class="col-6">
                                            <div class="d-flex align-items-center @(isAvailable ? "text-success" : "text-muted")">
                                                <i class="fas fa-check-circle me-2"></i>
                                                <span>@amenity.Name</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="tab-pane" id="nav-reviews" role="tabpanel" aria-labelledby="nav-reviews-tab">
                                <div class="d-flex">
                                    <img src="img/avatar.jpg" class="img-fluid rounded-circle p-3" style="width: 100px; height: 100px;" alt="">
                                    <div class="">
                                        <p class="mb-2" style="font-size: 14px;">March 5, 2025</p>
                                        <div class="d-flex justify-content-between">
                                            <h5>Jason Smith</h5>
                                            <div class="d-flex mb-3">
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star"></i>
                                            </div>
                                        </div>
                                        <p class="text-dark">Great room, very comfortable and clean!</p>
                                    </div>
                                </div>
                                <div class="d-flex">
                                    <img src="img/avatar.jpg" class="img-fluid rounded-circle p-3" style="width: 100px; height: 100px;" alt="">
                                    <div class="">
                                        <p class="mb-2" style="font-size: 14px;">March 10, 2025</p>
                                        <div class="d-flex justify-content-between">
                                            <h5>Sam Peters</h5>
                                            <div class="d-flex mb-3">
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star text-secondary"></i>
                                                <i class="fa fa-star"></i>
                                                <i class="fa fa-star"></i>
                                            </div>
                                        </div>
                                        <p class="text-dark">Good location but a bit small for my needs.</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <!-- YouTube Video -->
                            @if (!string.IsNullOrWhiteSpace(Model.Building.YouTubeVideoUrl))
                            {
                                <div class="col-md-6">
                                    <h5>Video giới thiệu</h5>
                                    <div class="ratio ratio-16x9">
                                        <iframe src="@Model.Building.YouTubeVideoUrl" title="YouTube video" allowfullscreen></iframe>
                                    </div>
                                </div>
                            }

                            <!-- Google Map -->
                            @if (!string.IsNullOrWhiteSpace(Model.Building.GoogleMapUrl))
                            {
                                <div class="col-md-6">
                                    <h5>Bản đồ</h5>
                                    <div class="ratio ratio-16x9">
                                        <iframe src="@Model.Building.GoogleMapUrl" title="Google Map" allowfullscreen="" loading="lazy"></iframe>
                                    </div>
                                </div>
                            }
                        </div>

                    </div>
                    <form action="/submit-review" method="POST" id="reviewForm">
                        <h4 class="mb-4 fw-bold">Leave a Review</h4>
                        <div class="mb-3">
                            <textarea class="form-control border rounded" name="comment" placeholder="Your Review *" rows="5" required></textarea>
                        </div>
                        <div class="d-flex align-items-center mb-4">
                            <p class="mb-0 me-3">Rate this:</p>
                            <div class="d-flex align-items-center rating-stars">
                                <input type="hidden" name="rating" id="rating-value" value="0">
                                <i class="fa fa-star text-muted" data-value="1" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="2" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="3" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="4" style="cursor: pointer;"></i>
                                <i class="fa fa-star text-muted" data-value="5" style="cursor: pointer;"></i>
                            </div>
                        </div>
                        <input type="hidden" name="buildingId" value="@Model.Building.BuildingId">
                        <input type="hidden" name="tenantId" value="2">
                        <button type="submit" class="btn btn-primary rounded">Submit</button>
                    </form>
                </div>
            </div>
            <div class="col-lg-4 col-xl-3">
                <div class="row g-4 fruite">
                    <!-- Landlord Information Section -->
                    <div class="col-lg-12 mb-4">
                        <div class="border rounded p-3">
                            <div class="d-flex align-items-center mb-3">
                                <img src="@(Model.Building.Provider?.Avatar ?? "/img/avatar.jpg")" class="img-fluid rounded-circle me-3" style="width: 60px; height: 60px;" alt="Provider Avatar">
                                <div>
                                    <h5 class="mb-1">@(Model.Building.Provider?.Name ?? "Không xác định")</h5>
                                    <p class="mb-0 text-muted">Tham gia: @(Model.Building.Provider?.JoinDate.ToString("dd/MM/yyyy") ?? "N/A")</p>
                                    <p class="mb-0 text-muted">Bài đăng: @(Model.Building.Provider?.PostCount.ToString() ?? "0")</p>
                                </div>
                            </div>
                            <div class="d-flex flex-column gap-2">
                                <form action="/start-chat" method="POST" id="chatFormMobile" class="w-100">
                                    <input type="hidden" name="buildingId" value="@Model.Building.BuildingId">
                                    <input type="hidden" name="tenantId" value="2">
                                    <input type="hidden" name="providerId" value="@Model.Building.Provider?.Id">
                                    <button type="submit" class="btn border border-secondary rounded-pill w-100 text-primary">
                                        <i class="fas fa-comment me-2 text-primary"></i> Chat Now
                                    </button>
                                </form>
                                <button type="button" class="btn border border-secondary rounded-pill w-100 text-primary" onclick="alert('Số điện thoại: @(Model.Building.Provider?.PhoneNumber ?? "Không có thông tin")')">
                                    <i class="fas fa-phone me-2 text-primary"></i> @(Model.Building.Provider?.PhoneNumber ?? "Không có thông tin")
                                </button>
                                <div class="d-flex gap-2">
                                    <a href="/Reports/Create/@(Model.Building.Provider.PhoneNumber)" class="btn border border-secondary rounded-pill w-50 text-danger">
                                        <i class="fas fa-exclamation-triangle me-2 text-danger"></i> Báo xấu
                                    </a>
                                    <button type="button" class="btn border border-secondary rounded-pill w-50 text-primary" onclick="navigator.share({title: '@(Model.Building.BuildingName ?? "Tòa nhà")', url: window.location.href})">
                                        <i class="fas fa-share-alt me-2 text-primary"></i> Chia sẻ
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <h4 class="mb-3">Mới nhất</h4>
                        @foreach (var building in Model.FeaturedBuildings)
                        {
                            <div class="d-flex align-items-center justify-content-start mb-4">
                                <div class="rounded me-4" style="width: 100px; height: 100px;">
                                    <img src="@building.ThumbnailUrl" class="img-fluid rounded" alt="@building.BuildingName">
                                </div>
                                <div>
                                    @if (building.VipBoxLevel.HasValue)
                                    {
                                        <span class="badge text-white ms-2 vip-label" style="background-color: @(building.VipBoxColor)">
                                            @building.VipBoxName
                                            @* <i class="fa @(building.VipBoxLevel.Value >= 2 ? "fa-crown" : "fa-star") ms-1"></i> *@
                                        </span>
                                    }
                                    <h6 class="mb-2">
                                        @building.BuildingName
                                    </h6>
                                    @if (building.Rating.HasValue)
                                    {
                                        <div class="d-flex mb-2">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= Math.Floor(building.Rating.Value))
                                                {
                                                    <i class="fa fa-star text-warning"></i>
                                                }
                                                else if (i <= Math.Ceiling(building.Rating.Value) && building.Rating.Value % 1 > 0)
                                                {
                                                    <i class="fa fa-star-half-alt text-warning"></i>
                                                }
                                                else
                                                {
                                                    <i class="fa fa-star text-body"></i>
                                                }
                                            }
                                            <span class="ms-2 text-muted">(@building.Rating.Value.ToString("0.0"))</span>
                                        </div>
                                    }
                                    <div class="d-flex mb-2">
                                        <h5 class="fw-bold me-2">@(building.DisplayPrice?.ToString("N0") ?? "Liên hệ") VNĐ/tháng</h5>
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="d-flex justify-content-center my-4">
                            <a href="/Buildings/BuildingList" class="btn border border-secondary px-4 py-3 rounded-pill text-primary w-100">Xem thêm</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Related Rentals Section -->
        <h1 class="fw-bold mb-0">Nhà trọ liên quan</h1>
        <div class="vesitable">
            <div class="owl-carousel vegetable-carousel justify-content-center">
                @if (Model.RelatedBuildings.Any())
                {
                    @foreach (var building in Model.RelatedBuildings)
                    {
                        <div class="border border-primary rounded position-relative vesitable-item">
                            <div class="vesitable-img">
                                <img src="@(building.ThumbnailUrl ?? "/img/placeholder.jpg")" class="img-fluid w-100 rounded-top" style="height: 200px; object-fit: cover;" alt="@building.BuildingName">
                            </div>
                            <div class="text-white bg-primary px-3 py-1 rounded position-absolute" style="top: 10px; right: 10px;">@building.WardName</div>
                            <div class="p-4 pb-0 rounded-bottom">
                                <h4 class="building-name">@building.BuildingName</h4>
                                <div class="d-flex mb-2">
                                    @if (building.Rating.HasValue)
                                    {
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Floor(building.Rating.Value))
                                            {
                                                <i class="fa fa-star text-warning"></i>
                                            }
                                            else if (i <= Math.Ceiling(building.Rating.Value) && building.Rating.Value % 1 > 0)
                                            {
                                                <i class="fa fa-star-half-alt text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="fa fa-star text-secondary"></i>
                                            }
                                        }
                                        <span class="ms-2 text-muted">(@building.Rating.Value.ToString("0.0"))</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Chưa có đánh giá</span>
                                    }
                                </div>
                                <p class="text-muted mb-2">Địa chỉ: @(string.IsNullOrEmpty(building.Address) ? building.WardName : building.Address)</p>
                                <div class="d-flex justify-content-between flex-lg-wrap">
                                    <p class="text-dark fs-5 fw-bold">@(building.DisplayPrice?.ToString("N0") ?? "Liên hệ") VNĐ/tháng</p>
                                    <form action="/Buildings/BuildingDetail" method="GET">
                                        <input type="hidden" name="id" value="@building.BuildingId">
                                        <button type="submit" class="btn border border-secondary rounded-pill px-3 py-1 mb-4 text-primary">
                                            <i class="fas fa-eye me-2 text-primary"></i> Xem chi tiết
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12 text-center">
                        <p>Không có nhà trọ liên quan.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- Rental Detail End -->

<style>
    .modal-content {
        border-radius: 10px;
    }

    .input-group .form-control:invalid {
        border-color: #dc3545;
    }

    .building-name {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        line-height: 1.5em;
        min-height: 1.5em;
        max-height: 1.5em;
        margin-bottom: 0.5rem;
        font-size: 1.25rem; /* fs-5 */
    }

    .room-type-btn {
        transition: all 0.3s ease;
    }

        .room-type-btn.active {
            background-color: #007bff;
            color: white !important;
            border-color: #007bff !important;
        }

            .room-type-btn.active input {
                color: white !important;
            }

    
    .thumbnail-container {
        position: relative;
        width: 100%;
    }

    .thumbnail-wrapper {
        transition: transform 0.3s ease;
    }

    .thumbnail-nav:hover {
        background: rgba(0,0,0,0.7);
    }

    .thumbnail-item {
        position: relative;
        display: inline-block;
    }

    .room-type-overlay {
        line-height: 1.2;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    #room-info p {
        transition: all 0.3s ease;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const mainImage = document.querySelector('#main-image');
        const thumbnails = document.querySelectorAll('.thumbnail');
        const roomCheckboxes = document.querySelectorAll('.room-checkbox');
        const toastContainer = document.getElementById('toastContainer');
        const defaultBuildingImage = '@(Model.Building.BuildingImages.FirstOrDefault(i => i.IsThumbnail == true)?.ImageUrl ?? Model.Building.BuildingImages.FirstOrDefault()?.ImageUrl ?? "/img/placeholder.jpg")';
        const thumbnailWrapper = document.querySelector('.thumbnail-wrapper');
        const prevBtn = document.querySelector('.thumbnail-nav.prev-btn');
        const nextBtn = document.querySelector('.thumbnail-nav.next-btn');
        const selectedRoomType = document.getElementById('selected-room-type');
        const selectedRoomPrice = document.getElementById('selected-room-price');
        const buildingPrice = document.querySelector('.building-price');
        const roomIdInput = document.getElementById('roomIdInput');
        let currentPosition = 0;
        const thumbnailWidth = 78; // 70px width + 8px margin-right
        const visibleThumbnails = 5; // Number of thumbnails visible at a time
        const totalThumbnails = thumbnails.length;

        // Show/hide navigation buttons based on number of thumbnails
        if (totalThumbnails > visibleThumbnails) {
            prevBtn.style.display = 'block';
            nextBtn.style.display = 'block';
        }

        // Handle previous button click
        prevBtn.addEventListener('click', function () {
            if (currentPosition > 0) {
                currentPosition--;
                thumbnailWrapper.style.transform = `translateX(-${currentPosition * thumbnailWidth}px)`;
                updateNavButtons();
            }
        });

        // Handle next button click
        nextBtn.addEventListener('click', function () {
            if (currentPosition < totalThumbnails - visibleThumbnails) {
                currentPosition++;
                thumbnailWrapper.style.transform = `translateX(-${currentPosition * thumbnailWidth}px)`;
                updateNavButtons();
            }
        });

        // Update navigation button states
        function updateNavButtons() {
            prevBtn.disabled = currentPosition === 0;
            nextBtn.disabled = currentPosition >= totalThumbnails - visibleThumbnails;
            prevBtn.style.opacity = currentPosition === 0 ? '0.5' : '1';
            nextBtn.style.opacity = currentPosition >= totalThumbnails - visibleThumbnails ? '0.5' : '1';
        }

        updateNavButtons();

        // Handle main image click to open in new tab
        mainImage.addEventListener('click', function (e) {
            e.preventDefault();
            const imageUrl = this.src;
            if (imageUrl && imageUrl !== '/img/placeholder.jpg' && imageUrl.startsWith('http')) {
                window.open(imageUrl, '_blank');
            } else {
                showToast('error', 'Lỗi', 'Không tìm thấy ảnh hợp lệ.');
            }
        });

        // Handle thumbnail click to update main image, room type, and price
        thumbnails.forEach(thumbnail => {
            thumbnail.addEventListener('click', function (e) {
                e.preventDefault();
                mainImage.src = this.src;
                mainImage.alt = this.alt;

                if (this.classList.contains('building-image')) {
                    // Reset to building defaults
                    roomCheckboxes.forEach(cb => {
                        cb.checked = false;
                        const label = document.querySelector(`label[for="room-${cb.value}"]`);
                        if (label) {
                            label.classList.remove('active');
                        }
                    });
                    selectedRoomType.textContent = '';
                    selectedRoomPrice.textContent = '';
                    buildingPrice.style.display = 'block'; 
                    roomIdInput.value = '';
                } else if (this.classList.contains('room-image')) {
                    const roomId = this.dataset.roomId;
                    const roomType = this.dataset.roomType;
                    const roomPrice = this.dataset.roomPrice;
                    roomCheckboxes.forEach(cb => {
                        const isCurrent = cb.value === roomId;
                        cb.checked = isCurrent;
                        const label = document.querySelector(`label[for="room-${cb.value}"]`);
                        if (label) {
                            if (isCurrent) {
                                label.classList.add('active');
                            } else {
                                label.classList.remove('active');
                            }
                        }
                    });
                    selectedRoomType.textContent = `Loại phòng: ${roomType}`;
                    selectedRoomPrice.textContent = `${roomPrice} / tháng`;
                    buildingPrice.style.display = 'none';
                }
            });
        });

        // Handle room checkbox change
        roomCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                roomCheckboxes.forEach(cb => {
                    const label = document.querySelector(`label[for="room-${cb.value}"]`);
                    if (cb !== this) {
                        cb.checked = false;
                        if (label) {
                            label.classList.remove('active');
                        }
                    } else {
                        if (label) {
                            if (this.checked) {
                                label.classList.add('active');
                            } else {
                                label.classList.remove('active');
                            }
                        }
                    }
                });

                if (this.checked) {
                    mainImage.src = this.dataset.thumbnail;
                    mainImage.alt = `Hình ảnh phòng ${this.value}`;
                    const thumbnail = document.querySelector(`.room-image[data-room-id="${this.value}"]`);
                    if (thumbnail) {
                        selectedRoomType.textContent = `Loại phòng: ${thumbnail.dataset.roomType}`;
                        selectedRoomPrice.textContent = thumbnail.dataset.roomPrice;
                        buildingPrice.style.display = 'none';
                        roomIdInput.value = this.value; // Sửa: Cập nhật roomIdInput với this.value
                        console.log(`Checkbox change: roomId set to ${this.value}`); // Debug
                    }
                } else {
                    mainImage.src = defaultBuildingImage;
                    mainImage.alt = '@(Model.Building.BuildingName ?? "Hình ảnh tòa nhà")';
                    selectedRoomType.textContent = '';
                    selectedRoomPrice.textContent = '';
                    buildingPrice.style.display = 'block';
                    roomIdInput.value = ''; // Reset roomId
                    console.log('Checkbox change: roomId reset to empty'); // Debug
                }
            });
        });
        // Handle star rating
        const stars = document.querySelectorAll('.rating-stars i');
        const ratingInput = document.getElementById('rating-value');

        stars.forEach(star => {
            star.addEventListener('click', function () {
                const rating = this.getAttribute('data-value');
                ratingInput.value = rating;

                stars.forEach(s => {
                    if (s.getAttribute('data-value') <= rating) {
                        s.classList.remove('text-muted');
                        s.classList.add('text-secondary');
                    } else {
                        s.classList.remove('text-secondary');
                        s.classList.add('text-muted');
                    }
                });
            });
        });
    });
</script>