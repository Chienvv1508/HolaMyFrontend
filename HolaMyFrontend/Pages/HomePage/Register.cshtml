@page
@model HolaMyFrontend.Pages.HomePage.RegisterModel
@{
    ViewData["Title"] = "Đăng ký";
}

<!-- Single Page Header start -->
<div class="container-fluid py-5" style="margin-top: 10px">
</div>
<div class="container-fluid py-5" id="registerSection">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="bg-light rounded p-4">
                    <h2 class="text-center mb-4">Đăng ký</h2>
                    <form id="register-form">
                        <div class="mb-3">
                            <label for="phoneNumber" class="form-label">Số điện thoại</label>
                            <input id="phoneNumber" class="form-control" placeholder="Số điện thoại" required />
                            <span id="phoneNumber-error" class="text-danger"></span>
                        </div>
                       
                        <div class="mb-3">
                            <label for="password" class="form-label">Mật khẩu</label>
                            <input id="password" type="password" class="form-control" placeholder="Mật khẩu" required minlength="6" />
                            <span id="password-error" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label for="repassword" class="form-label">Nhập lại mật khẩu</label>
                            <input id="repassword" type="password" class="form-control" placeholder="Nhập lại mật khẩu" required />
                            <span id="repassword-error" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label for="firstName" class="form-label">Họ</label>
                            <input id="firstName" class="form-control" placeholder="Họ" required />
                            <span id="firstName-error" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label for="lastName" class="form-label">Tên</label>
                            <input id="lastName" class="form-control" placeholder="Tên" required />
                            <span id="lastName-error" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label for="userType" class="form-label">Loại người dùng</label>
                            <select id="userType" class="form-select" required>
                                <option value="0">Chọn loại người dùng</option>
                                <option value="1">Chủ trọ</option>
                                <option value="2">Người thuê trọ</option>
                            </select>
                            <span id="userType-error" class="text-danger"></span>
                        </div>
                        <button id="contibtn" class="btn btn-primary w-100 rounded-pill">Tiếp tục</button>
                    </form>
                    <p class="text-center mt-3">
                        Đã có tài khoản? <a href="/Login" class="text-primary">Đăng nhập</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="container mt-4  d-none" id="otpSection">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card p-4 shadow-sm">
                @* <div class="mb-3">
                <label for="phone" class="form-label">Số điện thoại</label>
                <input id="phone" type="tel" class="form-control" placeholder="+84901234567" required />
                </div> *@
                <div id="recaptcha-container" class="mb-3"></div>
                @* <button id="sendOtpBtn" class="btn btn-primary w-100 rounded-pill" onclick="sendOTP()">Gửi OTP</button> *@
                <div class="mt-3">
                    <label for="otp" class="form-label">Mã OTP</label>
                    <input id="otp" type="text" class="form-control" placeholder="Nhập mã OTP" required />
                </div>
                <button id="verifyOtpBtn" class="btn btn-success w-100 rounded-pill mt-3" onclick="verifyOTP()" disabled>Xác minh OTP</button>
                <div id="status" class="mt-3 text-center text-danger"></div>
            </div>
        </div>
    </div>
</div>



<script src="~/js/phone-auth.js" asp-append-version="true"></script>







    <script>
        document.getElementById('contibtn').addEventListener('click', async function (e) {
            e.preventDefault();

           

            var isValid = VerifyUser();
            if(isValid){

            document.getElementById('otpSection').classList.remove('d-none');
            document.getElementById('otpSection').classList.add('d-block');
            document.getElementById('registerSection').classList.add('d-none');
            
            document.getElementById('otp').addEventListener('input', () => {
                const otp = document.getElementById('otp').value;
                document.getElementById('verifyOtpBtn').disabled = otp.length < 6;


            });
            sendOTP();

            }


            // try {
            //     const response = await fetch('http://localhost:8888/api/User/register', {
            //         method: 'POST',
            //         headers: {
            //             'Content-Type': 'application/json'
            //         },
            //         body: JSON.stringify({ phoneNumber, email, password, firstName, lastName, userType })
            //     });

            //     const data = await response;
            //     if (response.ok) {
            //         // localStorage.setItem('jwtToken', data.token);
            //         window.location.href = '../Auth';
            //     } else {
            //         document.getElementById('phoneNumber-error').textContent = data.message || 'Đăng ký thất bại';
            //         console.log(error.message);
            //     }
            // } catch (error) {
                
            //     document.getElementById('phoneNumber-error').textContent = 'Lỗi kết nối đến API';
            // }



        });

    function VerifyUser() {
        const phoneNumber = document.getElementById('phoneNumber').value.trim();
        const password = document.getElementById('password').value;
        const repassword = document.getElementById('repassword').value;
        const firstName = document.getElementById('firstName').value.trim();
        const lastName = document.getElementById('lastName').value.trim();
        const userType = document.getElementById('userType').value.trim();

       



        const phoneNumberError = document.getElementById('phoneNumber-error');
        const passwordError = document.getElementById('password-error');
        const repasswordError = document.getElementById('repassword-error');
        const firstNameError = document.getElementById('firstName-error');
        const lastNameError = document.getElementById('lastName-error');
        const userTypeError = document.getElementById('userType-error');
        let isValid = true;
        const phoneRegex = /^0[0-9]{9}$/;
        if (!phoneRegex.test(phoneNumber)) {
            isValid = false;
            phoneNumberError.innerText = "Số điện thoại không đúng định dạng!";
        }else{
            phoneNumberError.innerText = "";
        }
        if (password.length < 6) {
            isValid = false;
            passwordError.innerText ="Mật khẩu phải có ít nhất 6 ký tự.";
        }else{
            passwordError.innerText = "";
        }
        if (password !== repassword) {
            isValid = false;
              repasswordError.innerText = "Xác nhận mật khẩu không khớp. ";
        }else{
            repasswordError.innerText = "";
        }
        const nameRegex = /^[A-Za-zÀ-ỹà-ỹ\s]{2,50}$/;
        if (!firstName || !nameRegex.test(firstName)) {
            isValid = false;
            firstNameError.innerText = "Tên không được để trống hoặc chứa ký tự đặc biệt hoặc số!"; 
        }
        else {
            firstNameError.innerText = "";
        }
        if (!lastName || !nameRegex.test(lastName)) {
            isValid = false;
            lastNameError.innerText = "Họ không được để trống hoặc chứa ký tự đặc biệt hoặc số!";
        }
        else {
            lastNameError.innerText = "";
        }
        const allowedUserTypes = ["1", "2"]; 
        if (!allowedUserTypes.includes(userType)) {
            isValid = false;
            userTypeError.innerText = "Bắt buộc chọn loại người dùng!";
        } else {
            userTypeError.innerText = "";
        }
        if (!isValid) {
           
            return false;
        }
        return true;
      
    }

    </script>

