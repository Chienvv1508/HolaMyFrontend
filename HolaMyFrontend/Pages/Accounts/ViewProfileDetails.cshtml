@page
@model HolaMyFrontend.Pages.Accounts.ViewProfileDetailsModel
@{
    ViewData["Title"] = "Thông tin tài khoản";
}

<!-- Hero Start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Hồ sơ người dùng</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Profile</li>
    </ol>
</div>
<!-- Hero End -->
<!-- Profile Section Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <div class="card shadow-lg border-0 rounded-lg">
            <div class="card-body p-4 p-md-5">

                <div id="profile-loader" class="text-center py-5">
                    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;"></div>
                    <p class="mt-2">Đang tải dữ liệu người dùng...</p>
                </div>

                <div id="status-message" class="mb-3"></div>

                <form id="profile-form" style="display: none;">
                    <div class="row">
                        <div class="col-lg-4 text-center mb-4 mb-lg-0 d-flex flex-column align-items-center">
                            <img id="profile-avatar-preview" src="/img/default-avatar.png" class="rounded-circle img-fluid mb-3" alt="User Avatar" style="width: 200px; height: 200px; object-fit: cover; border: 4px solid #ffb524;">
                            <label for="avatar-input" class="btn btn-secondary">Thay đổi ảnh</label>
                            <input type="file" id="avatar-input" class="d-none" accept="image/png, image/jpeg, image/gif">
                        </div>
                        <div class="col-lg-8">
                            <div class="row g-4">
                                <div class="col-md-6">
                                    <label for="firstName" class="form-label fw-bold">Tên</label>
                                    <input type="text" class="form-control" id="firstName" >
                                </div>
                                <div class="col-md-6">
                                    <label for="lastName" class="form-label fw-bold">Họ</label>
                                    <input type="text" class="form-control" id="lastName" >
                                </div>
                                <div class="col-12">
                                    <label for="email" class="form-label fw-bold">Email</label>
                                    <input type="email" class="form-control" id="email">
                                </div>
                                <div class="col-12">
                                    <label for="phoneNumber" class="form-label fw-bold">Số điện thoại</label>
                                    <input type="tel" class="form-control" id="phoneNumber" >
                                </div>
                                <div class="col-12">
                                    <label for="addressDetail" class="form-label fw-bold">Địa chỉ chi tiết</label>
                                    <input type="text" class="form-control" id="addressDetail">
                                </div>
                                <div class="col-12 text-center mt-5">
                                    <button type="submit" id="save-button" class="btn btn-primary rounded-pill py-2 px-5">Lưu thay đổi</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Profile Section End -->
@section Scripts {
    <!-- Phần script này chỉ làm nhiệm vụ cầu nối -->
    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            const token = localStorage.getItem('jwtToken');
            if (!token) {
                window.location.href = '/HomePage/Login';
                return;
            }

            const form = document.getElementById('profile-form');
            const loader = document.getElementById('profile-loader');
            const statusMessage = document.getElementById('status-message');
            const avatarInput = document.getElementById('avatar-input');
            const avatarPreview = document.getElementById('profile-avatar-preview');
            const saveButton = document.getElementById('save-button');

            function showStatusMessage(message, type = 'danger') {
                statusMessage.innerHTML = `<div class="alert alert-${type}" role="alert">${message}</div>`;
            }

            // --- LOGIC TẢI DỮ LIỆU ---
            try {
                // 1. Gọi lên Page Handler để nó gọi API giúp
                const response = await fetch('?handler=LoadProfile', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ token: token })
                });

                if (response.status === 401) { // Lỗi từ API gốc được chuyển tiếp
                    localStorage.removeItem('jwtToken');
                    window.location.href = '/HomePage/Login';
                    return;
                }
                        if (!response.ok) {
            const contentType = response.headers.get('Content-Type') || '';
            if (contentType.includes('application/json')) {
                const errorJson = await response.json();
                const errorMessages = [];

                if (errorJson.errors) {
                    for (const key in errorJson.errors) {
                        errorMessages.push(...errorJson.errors[key]);
                    }
                } else if (errorJson.title) {
                    errorMessages.push(errorJson.title);
                }

                throw new Error(errorMessages.join('<br>'));
            } else {
                const errorText = await response.text();
                throw new Error(errorText);
            }
        }

                // 2. Nhận dữ liệu JSON từ Page Handler và điền vào form
                const user = await response.json();
                document.getElementById('firstName').value = user.firstName || '';
                document.getElementById('lastName').value = user.lastName || '';
                document.getElementById('email').value = user.email || '';
                document.getElementById('phoneNumber').value = user.phoneNumber || '';
                document.getElementById('addressDetail').value = user.addressDetail || '';
                avatarPreview.src = user.avatarUrl || user.avatar || '/img/default-avatar.png'; // Hỗ trợ cả hai tên trường
                avatarPreview.onerror = () => { avatarPreview.src = '/img/default-avatar.png'; };

                // 3. Hiển thị form
                loader.style.display = 'none';
                form.style.display = 'block';

            } catch (error) {
                console.error('Load Profile Error:', error);
                loader.style.display = 'none';
                showStatusMessage(`Không thể tải dữ liệu: ${error.message}`);
            }

            // --- LOGIC GỬI FORM ---
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                saveButton.disabled = true;
                saveButton.innerHTML = '<span class="spinner-border spinner-border-sm"></span> Đang lưu...';
                statusMessage.innerHTML = '';

                // Tạo FormData như bình thường
                const formData = new FormData();
                formData.append('FirstName', document.getElementById('firstName').value);
                formData.append('LastName', document.getElementById('lastName').value);
                formData.append('Email', document.getElementById('email').value);
                formData.append('PhoneNumber', document.getElementById('phoneNumber').value);
                formData.append('AddressDetail', document.getElementById('addressDetail').value);
                if (avatarInput.files[0]) {
                    formData.append('Avatar', avatarInput.files[0]);
                }

                try {
                    // 1. Gửi dữ liệu lên Page Handler để nó gọi API cập nhật giúp
                    const response = await fetch('?handler=UpdateProfile', {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${token}` // Gửi token trong header
                        },
                        body: formData
                    });

                    if (!response.ok) {
                        const errorText = await response.text();
                                const errorJson = JSON.parse(errorText);
        const errorMessages = [];

        if (errorJson.errors) {
            const errorMap = {
                Email: 'Email là bắt buộc.',
                PhoneNumber: 'Số điện thoại là bắt buộc.',
                FirstName: 'Tên là bắt buộc.',
                LastName: 'Họ là bắt buộc.',
                AddressDetail: 'Địa chỉ là bắt buộc.',
                Avatar: 'Ảnh đại diện không hợp lệ.'
            };

            for (const key in errorJson.errors) {
                const defaultMsg = errorJson.errors[key].join(', ');
                const translated = errorMap[key] || defaultMsg;
                errorMessages.push(translated);
            }
        } else if (errorJson.title) {
            errorMessages.push(errorJson.title);
        }

        throw new Error(errorMessages.join('<br>'));
                    }

                    // 2. Nhận kết quả và hiển thị
                    const successMessage = await response.text();
                    showStatusMessage(successMessage, 'success');
                    setTimeout(() => window.location.reload(), 2000);

                } catch (error) {
                    console.error('Update Profile Error:', error);
                    showStatusMessage(`Cập nhật thất bại: ${error.message}`);
                    saveButton.disabled = false;
                    saveButton.textContent = 'Lưu thay đổi';
                }
            });

            // Logic xem trước ảnh giữ nguyên
            avatarInput.addEventListener('change', function(e) {
                if (e.target.files[0]) {
                    avatarPreview.src = URL.createObjectURL(e.target.files[0]);
                }
            });
        });
    </script>
}